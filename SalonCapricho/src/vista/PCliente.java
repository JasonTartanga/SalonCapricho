/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import clases.Cliente;
import java.awt.Color;
import java.time.LocalDate;
import modelo.DAO;
import recursos.LookVentana.MessageDialog;
import recursos.LookVentana.VentanaError;

/**
 *
 * @author xDoble_Jx
 */
public class PCliente extends javax.swing.JPanel {

    private Cliente cli;
    private VMain vMain;
    private DAO dao;

    private boolean aniadir = false;
    private boolean editar = false;

    /**
     * Creates new form PCliente
     */
    public PCliente(VMain vMain, DAO dao) {
        this.vMain = vMain;
        this.dao = dao;
        initComponents();
        setBackground(new Color(0, 0, 0, 0));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new recursos.LookVentana.RoundPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        spNombre = new javax.swing.JSeparator();
        lblApellido = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        spApellido = new javax.swing.JSeparator();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        spTelefono = new javax.swing.JSeparator();
        lblHistorial = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btnCliente = new recursos.LookVentana.Button();

        fondo.setBackground(new java.awt.Color(102, 102, 102));

        lblNombre.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(227, 227, 227));
        lblNombre.setText("Nombre:");

        txtNombre.setEditable(false);
        txtNombre.setBackground(fondo.getBackground());
        txtNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.setBorder(null);
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        spNombre.setBackground(fondo.getBackground());
        spNombre.setForeground(new java.awt.Color(255, 255, 255));

        lblApellido.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        lblApellido.setForeground(new java.awt.Color(227, 227, 227));
        lblApellido.setText("Apellidos:");

        txtApellido.setEditable(false);
        txtApellido.setBackground(fondo.getBackground());
        txtApellido.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtApellido.setForeground(new java.awt.Color(255, 255, 255));
        txtApellido.setBorder(null);
        txtApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellidoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoFocusLost(evt);
            }
        });

        spApellido.setBackground(fondo.getBackground());
        spApellido.setForeground(new java.awt.Color(255, 255, 255));

        lblTelefono.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        lblTelefono.setForeground(new java.awt.Color(227, 227, 227));
        lblTelefono.setText("Telefono:");

        txtTelefono.setEditable(false);
        txtTelefono.setBackground(fondo.getBackground());
        txtTelefono.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTelefono.setForeground(new java.awt.Color(255, 255, 255));
        txtTelefono.setBorder(null);
        txtTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoFocusLost(evt);
            }
        });

        spTelefono.setBackground(fondo.getBackground());
        spTelefono.setForeground(new java.awt.Color(255, 255, 255));

        lblHistorial.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        lblHistorial.setForeground(new java.awt.Color(227, 227, 227));
        lblHistorial.setText("Historial:");

        jScrollPane1.setViewportView(jList1);

        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Imagenes_Pantalla/btnSubir.png"))); // NOI18N
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblHistorial)
                            .addComponent(lblApellido)
                            .addComponent(lblNombre)
                            .addComponent(spNombre)
                            .addComponent(txtNombre)
                            .addComponent(txtApellido)
                            .addComponent(spApellido)
                            .addComponent(txtTelefono)
                            .addComponent(spTelefono)
                            .addComponent(lblTelefono)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblNombre)
                .addGap(0, 0, 0)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(spNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(lblApellido)
                .addGap(0, 0, 0)
                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(spApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(lblTelefono)
                .addGap(0, 0, 0)
                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(spTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(lblHistorial)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        btnCliente.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreFocusGained

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtApellidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoFocusGained

    private void txtApellidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoFocusLost

    private void txtTelefonoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoFocusGained

    private void txtTelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoFocusLost

    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed
        if (aniadir) {
            if (validarCampos()) {

                Cliente cli = new Cliente();
                cli.setId_cliente(dao.generarIdCliente());
                cli.setNombre(txtNombre.getText());
                cli.setApellido(txtApellido.getText());
                cli.setTelefono(Integer.parseInt(txtTelefono.getText()));
                cli.setFecha_reg(LocalDate.now());

                dao.registrarCliente(cli);
                VentanaError ve = new VentanaError(vMain, "Registro", "Clienta registrada correctamente");

                cargarPanel(cli);
                aniadir = false;
            }

        }
        if (editar) {
            if (validarCampos()) {
                cli.setNombre(txtNombre.getText());
                cli.setApellido(txtApellido.getText());
                cli.setTelefono(Integer.parseInt(txtTelefono.getText()));

                dao.modificarCliente(cli);

                VentanaError ve = new VentanaError(vMain, "Modificacion", "Clienta modificada correctamente");

                editar = false;

                cargarPanel(cli);
            }
        }

        vMain.cargarTabla();
    }//GEN-LAST:event_btnClienteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private recursos.LookVentana.Button btnCliente;
    private recursos.LookVentana.RoundPanel fondo;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblHistorial;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JSeparator spApellido;
    private javax.swing.JSeparator spNombre;
    private javax.swing.JSeparator spTelefono;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    public void cargarPanel(Cliente cli) {
        limpiarCampos();

        txtNombre.setText(cli.getNombre());
        txtApellido.setText(cli.getApellido());
        txtTelefono.setText(cli.getTelefono() + "");

        btnCliente.setVisible(false);
        this.cli = cli;

    }

    public void registrar(Cliente cli) {
        limpiarCampos();

        txtNombre.setEditable(true);
        txtApellido.setEditable(true);
        txtTelefono.setEditable(true);

        btnCliente.setVisible(true);
        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Imagenes_Pantalla/btnSubir.png")));
        aniadir = true;
        editar = false;
    }

    public void modificar(Cliente cli) {
        txtNombre.setEditable(true);
        txtApellido.setEditable(true);
        txtTelefono.setEditable(true);

        btnCliente.setVisible(true);
        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Imagenes_Pantalla/btnSubir.png")));
        editar = true;
        aniadir = false;
    }

    public void eliminar(Cliente cli) {
        limpiarCampos();

        MessageDialog md = new MessageDialog(vMain);
        md.showMessage("Eliminar Clienta", "Seguro que quieres eliminar a " + cli.getNombre() + " " + cli.getApellido());
        if (md.getMessageType() == MessageDialog.MessageType.OK) {
            dao.eliminarCliente(cli.getId_cliente());
        }

        vMain.cargarTabla();
    }

    public void limpiarCampos() {
        txtNombre.setText("");
        txtNombre.setForeground(new Color(255, 255, 255));
        spNombre.setForeground(new Color(255, 255, 255));

        txtApellido.setText("");
        txtApellido.setForeground(new Color(255, 255, 255));
        spApellido.setForeground(new Color(255, 255, 255));

        txtTelefono.setText("");
        txtTelefono.setForeground(new Color(255, 255, 255));
        spTelefono.setForeground(new Color(255, 255, 255));
    }

    private boolean validarCampos() {
        boolean valido = true;
        String mensaje = "";

        //****** NOMBRE ******//
        if (txtNombre.getText().isBlank()) {
            txtNombre.setForeground(Color.red);
            spNombre.setForeground(Color.red);
            mensaje += "No has introducido nombre               ";

        } else if (txtNombre.getText().length() > 25) {
            txtNombre.setForeground(Color.red);
            spNombre.setForeground(Color.red);
            mensaje += "El nombre no puede tener mas de 25 letras               ";

        } else {
            txtNombre.setForeground(new Color(48, 170, 63));
            spNombre.setForeground(new Color(48, 170, 63));
        }

        //****** APELLIDO ******//
        if (txtApellido.getText().isBlank()) {
            txtApellido.setForeground(Color.red);
            spApellido.setForeground(Color.red);
            mensaje += "No has introducido apellidos                ";

        } else if (txtApellido.getText().length() > 50) {
            txtApellido.setForeground(Color.red);
            spApellido.setForeground(Color.red);
            mensaje += "El apellido no puede tener mas de 50 letras             ";

        } else {
            txtApellido.setForeground(new Color(48, 170, 63));
            spApellido.setForeground(new Color(48, 170, 63));
        }

        //****** TELEFONO ******//
        if (txtTelefono.getText().length() != 9) {
            txtTelefono.setForeground(Color.red);
            spTelefono.setForeground(Color.red);
            mensaje += "El telefono no tiene 9 digitos              ";

        } else {
            try {
                Integer.parseInt(txtTelefono.getText());
                txtTelefono.setForeground(new Color(48, 170, 63));
                spTelefono.setForeground(new Color(48, 170, 63));

            } catch (NumberFormatException e) {
                txtTelefono.setForeground(Color.red);
                spTelefono.setForeground(Color.red);
                mensaje += "El telefono no es un numero.            ";
            }

        }
        System.out.println("Mensaje --> " + mensaje);

        if (mensaje != "") {
            valido = false;
            VentanaError ve = new VentanaError(vMain, "Fallo al introducir", mensaje);
        }
        return valido;
    }
}
